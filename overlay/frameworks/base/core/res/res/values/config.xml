<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2009 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds.  Do not translate. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Flag indicating whether the we should enable the automatic brightness in Settings.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if lux == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for lux levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>40</item>
        <item>65</item>
        <item>95</item>
        <item>140</item>
        <item>200</item>
        <item>350</item>
        <item>650</item>
        <item>1300</item>
        <item>2000</item>
        <item>3300</item>
        <item>6000</item>
        <item>10000</item>
    </integer-array>

    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.

         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined

         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>3.5077</item>
        <item>6.8394</item>
        <item>15.2619</item>
        <item>30.2619</item>
        <item>40.671</item>
        <item>52.3019</item>
        <item>65.2512</item>
        <item>77.37</item>
        <item>90.152</item>
        <item>100.297</item>
        <item>110.385</item>
        <item>135.064</item>
        <item>160.5179</item>
        <item>195.0267</item>
        <item>380.2814</item>
        <item>409.2867</item>
        <item>427.6287</item>
    </array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.

         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>2.0482</item>
        <item>2.7841</item>
        <item>3.79505</item>
        <item>4.4748</item>
        <item>5.08</item>
        <item>6.4233</item>
        <item>8.0848</item>
        <item>11.6607</item>
        <item>13.2347</item>
        <item>15.0676</item>
        <item>16.8302</item>
        <item>18.4261</item>
        <item>20.3103</item>
        <item>21.9042</item>
        <item>23.5456</item>
        <item>25.2137</item>
        <item>27.1769</item>
        <item>28.9571</item>
        <item>30.5244</item>
        <item>32.3535</item>
        <item>34.0867</item>
        <item>42.366</item>
        <item>51.1309</item>
        <item>59.52</item>
        <item>67.744</item>
        <item>75.9738</item>
        <item>84.6332</item>
        <item>94.1525</item>
        <item>102.2207</item>
        <item>110.4878</item>
        <item>117.0405</item>
        <item>124.3733</item>
        <item>130.9928</item>
        <item>140.4247</item>
        <item>149.3156</item>
        <item>157.1995</item>
        <item>165.3651</item>
        <item>173.2726</item>
        <item>181.4272</item>
        <item>189.1402</item>
        <item>197.5334</item>
        <item>205.6301</item>
        <item>213.9381</item>
        <item>222.2769</item>
        <item>230.0891</item>
        <item>238.6084</item>
        <item>246.5399</item>
        <item>255.6544</item>
        <item>263.6221</item>
        <item>271.9324</item>
        <item>279.1449</item>
        <item>288.5736</item>
        <item>297.6628</item>
        <item>306.1899</item>
        <item>314.4511</item>
        <item>322.1404</item>
        <item>330.969</item>
        <item>338.2251</item>
        <item>346.2251</item>
        <item>354.567</item>
        <item>370.799</item>
        <item>413.1738</item>
        <item>415.6397</item>
        <item>417.264</item>
        <item>419.264</item>
        <item>421.264</item>
        <item>424.646</item>
        <item>427.6287</item>
    </array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.

         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>0</item>
        <item>1</item>
        <item>2</item>
        <item>3</item>
        <item>4</item>
        <item>5</item>
        <item>6</item>
        <item>7</item>
        <item>8</item>
        <item>9</item>
        <item>10</item>
        <item>11</item>
        <item>12</item>
        <item>13</item>
        <item>14</item>
        <item>15</item>
        <item>16</item>
        <item>17</item>
        <item>18</item>
        <item>19</item>
        <item>20</item>
        <item>25</item>
        <item>30</item>
        <item>35</item>
        <item>40</item>
        <item>45</item>
        <item>50</item>
        <item>55</item>
        <item>60</item>
        <item>65</item>
        <item>70</item>
        <item>75</item>
        <item>80</item>
        <item>85</item>
        <item>90</item>
        <item>95</item>
        <item>100</item>
        <item>105</item>
        <item>110</item>
        <item>115</item>
        <item>120</item>
        <item>125</item>
        <item>130</item>
        <item>135</item>
        <item>140</item>
        <item>145</item>
        <item>150</item>
        <item>155</item>
        <item>160</item>
        <item>165</item>
        <item>170</item>
        <item>174</item>
        <item>179</item>
        <item>184</item>
        <item>189</item>
        <item>194</item>
        <item>199</item>
        <item>204</item>
        <item>209</item>
        <item>214</item>
        <item>219</item>
        <item>224</item>
        <item>229</item>
        <item>234</item>
        <item>239</item>
        <item>244</item>
        <item>249</item>
        <item>255</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisBrightLevels">
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>250</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>300</item>
        <item>400</item>
        <item>500</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_dynamicHysteresisLuxLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_dynamicHysteresisLuxLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_dynamicHysteresisDarkLevels">
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>200</item>
        <item>300</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>400</item>
        <item>500</item>
        <item>500</item>
    </integer-array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_dynamicHysteresisBrightLevels, and the new darkening
         hysteresis constraint value is the n-th element of config_dynamicHysteresisDarkLevels.

         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                      calculated index
         value < lux[0]                 0
         lux[n] <= value < lux[n+1]     n+1
         lux[MAX] <= value              MAX+1 -->
    <integer-array name="config_dynamicHysteresisLuxLevels">
        <item>1</item>
        <item>4</item>
        <item>12</item>
        <item>20</item>
        <item>40</item>
        <item>65</item>
        <item>95</item>
        <item>140</item>
        <item>200</item>
        <item>350</item>
        <item>650</item>
        <item>1300</item>
        <item>2000</item>
        <item>3300</item>
        <item>6000</item>
        <item>10000</item>
    </integer-array>

    <!-- Screen brightness used to dim the screen when the user activity
         timeout expires.  May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDim">6</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">184</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">2</integer>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">2000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">4000</integer>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">300%</fraction>

    <!-- Amount of time it takes for the light sensor to warm up in milliseconds.
         For this time after the screen turns on, the Power Manager
         will not debounce light sensor readings -->
    <integer name="config_lightSensorWarmupTime">200</integer>

    <!-- The default refresh rate -->
    <integer name="config_defaultRefreshRate">120</integer>

    <!-- The default peak refresh rate. -->
    <integer name="config_defaultPeakRefreshRate">120</integer>

    <!-- Flag indicating whether the current device is "voice capable".
         If true, this means that the device supports circuit-switched
         (i.e. voice) phone calls over the telephony network, and is
         allowed to display the in-call UI while a cellular voice call is
         active.  This can be overridden to false for "data only" devices
         which can't make voice calls and don't support any in-call UI.
         Note: this flag is subtly different from the
         PackageManager.FEATURE_TELEPHONY system feature, which is
         available on *any* device with a telephony radio, even if the
         device is data-only. -->
    <bool name="config_voice_capable">false</bool>

    <!-- Flag indicating whether the current device allows sms service.
         If true, this means that the device supports both sending and
         receiving sms via the telephony network.
         This can be overridden to false for "data only" devices
         which can't send and receive sms message.
         Note: Disable SMS also disable voicemail waiting sms,
              cell broadcasting sms, and MMS. -->
    <bool name="config_sms_capable">false</bool>

    <!-- Flag indicating whether the current device allows data.
         If true, this means that the device supports data connectivity through
         the telephony network.
         This can be overridden to false for devices that support voice and/or sms . -->
     <bool name="config_mobile_data_capable">false</bool>

    <!-- Number of physical SIM slots on the device. This includes both eSIM and pSIM slots, and
         is not necessarily the same as the number of phones/logical modems supported by the device.
         For example, a multi-sim device can have 2 phones/logical modems, but 3 physical slots,
         or a single SIM device can have 1 phones/logical modems, but 2 physical slots (one eSIM
         and one pSIM) -->
    <integer name="config_num_physical_slots">0</integer>

    <!-- Flag indicating device support for EAP SIM, AKA, AKA' -->
    <bool name="config_eap_sim_based_auth_supported">false</bool>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- Boolean indicating whether the HWC setColorTransform function can be performed efficiently
         in hardware. -->
    <bool name="config_setColorTransformAccelerated">true</bool>

    <!-- Configure mobile tcp buffer sizes in the form:
         rat-name:rmem_min,rmem_def,rmem_max,wmem_min,wmem_def,wmem_max
         If no value is found for the rat-name in use, the system default will be applied.
    -->
    <string-array name="config_mobile_tcp_buffers">
        <item>5gnr:2097152,6291456,16777216,512000,2097152,8388608</item>
        <item>lte:2097152,4194304,8388608,262144,524288,1048576</item>
        <item>lte_ca:4096,6291456,12582912,4096,1048576,2097152</item>
        <item>umts:4094,87380,1220608,4096,16384,1220608</item>
        <item>hspa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hsupa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hsdpa:4094,87380,1220608,4096,16384,1220608</item>
        <item>hspap:4094,87380,1220608,4096,16384,1220608</item>
        <item>edge:4093,26280,35040,4096,16384,35040</item>
        <item>gprs:4092,8760,11680,4096,8760,11680</item>
        <item>evdo:4094,87380,524288,4096,16384,262144</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array name="config_tether_bluetooth_regexs">
        <item>bnep\\d</item>
        <item>bt-pan</item>
    </string-array>

    <!-- Dhcp range (min, max) to use for tethering purposes -->
    <string-array name="config_tether_dhcp_range">
        <item>192.168.42.2</item>
        <item>192.168.42.254</item>
        <item>192.168.43.2</item>
        <item>192.168.43.254</item>
        <item>192.168.44.2</item>
        <item>192.168.44.254</item>
        <item>192.168.45.2</item>
        <item>192.168.45.254</item>
        <item>192.168.46.2</item>
        <item>192.168.46.254</item>
        <item>192.168.47.2</item>
        <item>192.168.47.254</item>
        <item>192.168.48.2</item>
        <item>192.168.48.254</item>
        <item>192.168.49.2</item>
        <item>192.168.49.254</item>
        <item>192.168.50.2</item>
        <item>192.168.50.254</item>
        <item>192.168.51.2</item>
        <item>192.168.51.254</item>
    </string-array>

    <!-- Array of allowable ConnectivityManager network types for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
         [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         USB interfaces.  If the device doesn't want to support tethering over USB this should
         be empty.  An example would be "usb.*" -->
    <string-array name="config_tether_usb_regexs">
        <item>usb\\d</item>
        <item>rndis\\d</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
         Wifi interfaces.  If the device doesn't want to support tethering over Wifi this
         should be empty.  An example would be "softap.*" -->
    <string-array name="config_tether_wifi_regexs">
        <item>softap0</item>
        <item>wlan0</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
         [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
         before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <!-- NOTE: The telephony module is no longer reading the configuration below for available
         APN types.  The set of APN types and relevant settings are specified within the telephony
         module and are non-configurable.  Whether or not data connectivity over a cellular network
         is available at all is controlled by the flag: config_moble_data_capable. -->
    <string-array name="networkAttributes">
        <item>wifi,1,1,1,-1,true</item>
        <item>bluetooth,7,7,2,-1,true</item>
        <item>ethernet,9,9,9,-1,true</item>
        <item>wifi_slave,30,1,1,-1,true</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array name="radioAttributes">
        <item>1,1</item>
        <item>0,1</item>
    </string-array>

    <!-- Whether WiFi display is supported by this device.
         There are many prerequisites for this feature to work correctly.
         Here are a few of them:
         * The WiFi radio must support WiFi P2P.
         * The WiFi radio must support concurrent connections to the WiFi display and
           to an access point.
         * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
           remote submix module.  This module is used to record and stream system
           audio output to the WiFi display encoder in the media server.
         * The remote submix module "audio.r_submix.default" must be installed on the device.
         * The device must be provisioned with HDCP keys (for protected content).
    -->
    <bool name="config_enableWifiDisplay">true</bool>

    <!-- Set to true if the wifi display supports compositing content stored
         in gralloc protected buffers.  For this to be true, there must exist
         a protected hardware path for surface flinger to composite and send
         protected buffers to the wifi display video encoder.
         If this flag is false, we advise applications not to use protected
         buffers (if possible) when presenting content to a wifi display because
         the content may be blanked.
         This flag controls whether the {@link Display#FLAG_SUPPORTS_PROTECTED_BUFFERS}
         flag is set for wifi displays.
    -->
    <bool name="config_wifiDisplaySupportsProtectedBuffers">false</bool>

    <!-- Indicate whether closing the lid causes the device to go to sleep and opening
         it causes the device to wake up.
         The default is false. -->
    <bool name="config_lidControlsSleep">true</bool>

    <!-- Indicate whether to allow the device to suspend when the screen is off
         due to the proximity sensor.  This resource should only be set to true
         if the sensor HAL correctly handles the proximity sensor as a wake-up source.
         Otherwise, the device may fail to wake out of suspend reliably.
         The default is false. -->
    <bool name="config_suspendWhenScreenOffDueToProximity">true</bool>

    <!-- ComponentName of a dream to show whenever the system would otherwise have
         gone to sleep.  When the PowerManager is asked to go to sleep, it will instead
         try to start this dream if possible.  The dream should typically call startDozing()
         to put the display into a low power state and allow the application processor
         to be suspended.  When the dream ends, the system will go to sleep as usual.
         Specify the component name or an empty string if none.

         Note that doze dreams are not subject to the same start conditions as ordinary dreams.
         Doze dreams will run whenever the power manager is in a dozing state. -->
    <string name="config_dozeComponent">com.android.systemui/com.android.systemui.doze.DozeService</string>

    <!-- If true, the doze component is not started until after the screen has been
         turned off and the screen off animation has been performed. -->
    <bool name="config_dozeAfterScreenOffByDefault">true</bool>

    <!-- Whether the always on display mode is available. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Control whether the always on display mode is enabled by default. This value will be used
         during initialization when the setting is still null. -->
    <bool name="config_dozeAlwaysOnEnabled">false</bool>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.

         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.

         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.

         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.

         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">17</integer>

    <!-- Doze: should the TYPE_PICK_UP_GESTURE sensor be used as a pulse signal. -->
    <bool name="config_dozePulsePickup">true</bool>

    <!-- Shutdown if the battery temperature exceeds (this value * 0.1) Celsius. -->
    <integer name="config_shutdownBatteryTemperature">680</integer>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/apex/com.android.art/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.art/javalib/core-libart.jar"</item>
        <item>"/system_ext/priv-app/SystemUIGoogle/SystemUIGoogle.apk"</item>
        <item>"/system/bin/surfaceflinger"</item>
    </string-array>

    <!-- Should the pinner service pin the Home application? -->
    <bool name="config_pinnerHomeApp">true</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Whether the Unprocessed audio source supports the required frequency range and level -->
    <bool name="config_supportAudioSourceUnprocessed">true</bool>

    <!-- True if the device supports Sustained Performance Mode-->
    <bool name="config_sustainedPerformanceModeSupported">true</bool>

    <!-- Indicate available ColorDisplayManager.COLOR_MODE_xxx. -->
    <integer-array name="config_availableColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL   -->
        <item>1</item> <!-- COLOR_MODE_BOOSTED   -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>

    <!-- Color mode to use when accessibility transforms are enabled. This color mode must be
         supported by the device, but not necessarily appear in config_availableColorModes. The
         regularly selected color mode will be used if this value is negative. -->
    <integer name="config_accessibilityColorMode">2</integer>

    <!-- The following two arrays specify which color space to use for display composition when a
         certain color mode is active.
         Composition color spaces are defined in android.view.Display.COLOR_MODE_xxx, and color
         modes are defined in ColorDisplayManager.COLOR_MODE_xxx and
         ColorDisplayManager.VENDOR_COLOR_MODE_xxx.
         The color space COLOR_MODE_DEFAULT (0) lets the system select the most appropriate
         composition color space for currently displayed content. Other values (e.g.,
         COLOR_MODE_SRGB) override system selection; these other color spaces must be supported by
         the device for for display composition.
         If a color mode does not have a corresponding color space specified in this array, the
         currently set composition color space will not be modified.-->
    <integer-array name="config_displayCompositionColorModes">
        <item>0</item> <!-- COLOR_MODE_NATURAL   -->
        <item>1</item> <!-- COLOR_MODE_BOOSTED   -->
        <item>2</item> <!-- COLOR_MODE_SATURATED -->
        <item>3</item> <!-- COLOR_MODE_AUTOMATIC -->
    </integer-array>
    <integer-array name="config_displayCompositionColorSpaces">
        <item>0</item> <!-- COLOR_MODE_DEFAULT -->
        <item>0</item> <!-- COLOR_MODE_DEFAULT -->
        <item>0</item> <!-- COLOR_MODE_DEFAULT -->
        <item>9</item> <!-- COLOR_MODE_DISPLAY_P3 -->
    </integer-array>

    <!-- Whether or not wcg mode should be enabled on this device -->
    <bool name="config_enableWcgMode">true</bool>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveNotificationLed">false</bool>
    
    <string-array name="config_key_ec_private">
        <item>MHcCAQEEIDiPy/XhNZx0xdPRfT9xgWjyHHSntbDnnd1ZFF/ZivZdoAoGCCqGSM49
AwEHoUQDQgAEDjPTbpw6jiC0lbCYwcLfm/e2W+SX9YroJ3MzX8Z4NUlWDm3D1iIt
9kxnWk1rmEw2GIKMlOj+ANKKZhDSXxqpAQ==</item>
    </string-array>
    <string-array name="config_cert_ec">
        <item>MIICLDCCAbKgAwIBAgIKCXAxRHdzOYI5BjAKBggqhkjOPQQDAjAbMRkwFwYDVQQF
ExA4N2Y0NTE0NDc1YmEwYTJiMB4XDTE2MDUyNjE3MjAxNVoXDTI2MDUyNDE3MjAx
NVowGzEZMBcGA1UEBRMQYjQxMDMwMWU1MWU0N2NmYjBZMBMGByqGSM49AgEGCCqG
SM49AwEHA0IABA4z026cOo4gtJWwmMHC35v3tlvkl/WK6CdzM1/GeDVJVg5tw9Yi
LfZMZ1pNa5hMNhiCjJTo/gDSimYQ0l8aqQGjgd0wgdowHQYDVR0OBBYEFDW8sdJy
tohf7ksdrcYtMQmKmu4eMB8GA1UdIwQYMBaAFDBEI+Wi9gbhUKt3XxYWu5HMY8ZZ
MAwGA1UdEwEB/wQCMAAwDgYDVR0PAQH/BAQDAgeAMCQGA1UdHgQdMBugGTAXghVp
bnZhbGlkO2VtYWlsOmludmFsaWQwVAYDVR0fBE0wSzBJoEegRYZDaHR0cHM6Ly9h
bmRyb2lkLmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wOTcwMzE0NDc3
NzMzOTgyMzkwNjAKBggqhkjOPQQDAgNoADBlAjEA/KjXz483n538K3zxx+GPfXJo
8RTKNcqMAJu1joME/eux0IZ8BVtGPj+r1P6NwWtHAjAf/IkoTdgJ/N1uqjFIN/N6
VHVXEEBZ3T6LaEnzv2jWuvSag13qGyJ2K2RYyCFCjnk=</item>
        <item>MIIDwzCCAaugAwIBAgIKA4gmZ2BliZaFdTANBgkqhkiG9w0BAQsFADAbMRkwFwYD
VQQFExBmOTIwMDllODUzYjZiMDQ1MB4XDTE2MDUyNjE3MDE1MVoXDTI2MDUyNDE3
MDE1MVowGzEZMBcGA1UEBRMQODdmNDUxNDQ3NWJhMGEyYjB2MBAGByqGSM49AgEG
BSuBBAAiA2IABGQ7VmgdJ/rEgs9sIE3rzvApXDUMAaqMMn8+1fRJrvQpZkJfOT2E
djtdrVaxDQRZxixqT5MlVqiSk8PRTqLx3+8OPLoicqMiOeGytH2sVQurvFynVeKq
SGKK1jx2/2fccqOBtjCBszAdBgNVHQ4EFgQUMEQj5aL2BuFQq3dfFha7kcxjxlkw
HwYDVR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB
/zAOBgNVHQ8BAf8EBAMCAYYwUAYDVR0fBEkwRzBFoEOgQYY/aHR0cHM6Ly9hbmRy
b2lkLmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC9FOEZBMTk2MzE0RDJG
QTE4MA0GCSqGSIb3DQEBCwUAA4ICAQBAOYqLNryTmbOlnrjnIvDoXxzaLOgCXu29
l7KpbFHacVLxgYuGRiIEQqzZBqUYSt9Pgx+P2KvoHtz99sEZr2xTe0Dw6CTHTAmx
WXUFdrlvEMm2GySfvJRfMNCuX1oIS/M5PfREY2YZHyLq/sn1sJr3FjbKMdUMBo5A
camcD3H8wl9O/6qfhX+57iXzoK6yMzJRG/Mlkm58/sFk0pjayUBchmUJL0FQ6IhK
Ygy8RKE2UDyXKOE7+ZMSMUUkAdzyn2PFv7TvQtDk0ge2mkVrNrfPSglMzBNvrSDH
PBmTktXzwseVagIRT5WI91OrUOYPFgostsfH42hs5wJtAFGPwDg/1mNa8UyH9k1b
MrRq3Srez1XG0Ju7SGN/uNX5dkcwvfAmadtmM7Pp+l2VHRYRR600jAcM2+7bl8eg
qfM/A7vyDLZqPIxDwkLXj2eN99nJZJVaGfB9dHyFOqBqBM6SdyV6MSIr3AHoo6u+
BWIX9+q8n1qg5I6JWeEe+K58SbRDVoNQgsKP9/iPruXMU5rm2ywPxICVGysl1GgA
P+FJ3X6oP0tXFWQlYoWdSloSVHNZQqj2ev/69sMnGsTeJw1V7I0gR+eZNEfxe+vZ
D4KP88KxuiPCe94rp+Aqs5/YwuCo6rQ+HGi5OZNBsQXYIufClSBje+OpjQb7HJgi
hJdzo2/IBw==</item>
        <item>MIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV
BAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy
ODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS
Sxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7
tv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj
nar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq
C4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ
oVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O
JtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg
sTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi
igHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M
RPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E
aDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um
AGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD
VR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO
BgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk
Lmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD
ggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB
Pb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m
qC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY
DBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm
QUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u
JU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD
CdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy
ZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD
qwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic
MDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1
wDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk</item>
    </string-array>
    <string-array name="config_key_rsa_private">
        <item>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</item>
    </string-array>
    <string-array name="config_cert_rsa">
        <item>MIIFGDCCAwCgAwIBAgIKATUFYUFTeFZEQDANBgkqhkiG9w0BAQsFADAbMRkwFwYD
VQQFExA4N2Y0NTE0NDc1YmEwYTJiMB4XDTE2MDUyNjE3MjAwM1oXDTI2MDUyNDE3
MjAwM1owGzEZMBcGA1UEBRMQYjQxMDMwMWU1MWU0N2NmYjCCAaIwDQYJKoZIhvcN
AQEBBQADggGPADCCAYoCggGBAMFKMYoy/FBK72zPEMJWRSH73Snb+4KUTdvfuUlS
zp24L1pkgyfTXYjH7m6yLoBafR5CJdcQEHyCB+O05LVLASJ+cTva7Z+cQzUDbRxU
yoFmguM3hum/sxJyB+p9E6ayHBmLcfXwZEU1xxQp7UI1/JQ4CRzqR2bdIz+DR1DM
qUhgOBuwegsGGi+fQYa43Q3CWzy4DxuRwDfiuPBai0TcX7+OVmrpWLzQei/6gBkR
pmzObeQFNatU+hQDXx/kCudWFdmWKZszQjDKvLivdK+wNridtEELgoaOiM6oAztd
lK2B7rzfj3Ity/SPWghe4HAAOX5763lKNNpR3c69n7uhIdYkICBdXhRCme0Aybfu
oDIbY4mSQtCs1sjy2kuqFRVxZ0b9utkySjMj9kIDpTKaty+EdrKwEDg8LN9R6dfQ
FSG5k/7Fi37kkJT+7iJmiGuF9lp1vApqBWOUAr/IRlXcinLcudJkbq2o2y20e9r5
4WJ41VQ1Y1uIxGrtBAX1f99E2QIDAQABo4HdMIHaMB0GA1UdDgQWBBTBdWs3fcmA
Efw4qHu163IFWObCzzAfBgNVHSMEGDAWgBQOVW9G9Tt3Z+G5c9xV5q7qtP0n3TAM
BgNVHRMBAf8EAjAAMA4GA1UdDwEB/wQEAwIHgDAkBgNVHR4EHTAboBkwF4IVaW52
YWxpZDtlbWFpbDppbnZhbGlkMFQGA1UdHwRNMEswSaBHoEWGQ2h0dHBzOi8vYW5k
cm9pZC5nb29nbGVhcGlzLmNvbS9hdHRlc3RhdGlvbi9jcmwvMDEzNTA1NjE0MTUz
Nzg1NjQ0NDAwDQYJKoZIhvcNAQELBQADggIBAMi8RlYE+GOCXSjo+euniip3dVIb
GCp7m02TCK3PtKoF0CH1981+4m4BKFSqbH/PNKDCXabrKs0I9PEuEng55XmjesR8
ejdYB93YT4lfEulFfJ7HzPuGJbhMa4Z1KwaMHAAbic3Hldjj3mF8EYXmafyFLCh4
eFHzYH42b87+vjmYA4vG3lHTfLJtL1Nb0/DdFq3+jVem7yJ2eDp9uzXMiMeJ6Mcz
E+0wth88bwyzypF4HNPktFLph9e2GkdOhpUSAH17d73KbcisyBta2CfO1/SE3juV
9q0d2YW0h7p/Zzzle/pOKPGpVNsnAUBjPD7qNPEZZMiCIxmYTdbQKNgr+cFLAHvo
T4pTZi2rMBsqPhMFujkbqZ8sKx0dzPZ/VeOZs9gaspLvI/wvpeTnscerIeKfOvs/
rG54oLoeofhq/Fiz5y4nNPOxs8vFoUkWTDsAmPtVPkq09l5nxz2zvGTXprFR/Fx+
gBLdlcmmusThEO7GIH2WUTZhP5mc5r3j2wiZNlfJxWCzqfX1DpEhhe3ZW51cZ+aN
liqDwj1H0kNY1WRaPiXL6L6zNwJbhm2vOwy80bZrASzUowCFLjjB9pEZPqjw6iFu
/rx97R34Uuxh+Iy0YWBi2DK1u+Y/QnOfgAbn8b+v3L/QsouStpVVd+invK2Z535v
t81W8M2G05hM+cJo</item>
        <item>MIIFcTCCA1mgAwIBAgIKA4gmZ2BliZaFdDANBgkqhkiG9w0BAQsFADAbMRkwFwYD
VQQFExBmOTIwMDllODUzYjZiMDQ1MB4XDTE2MDUyNjE3MDEzMloXDTI2MDUyNDE3
MDEzMlowGzEZMBcGA1UEBRMQODdmNDUxNDQ3NWJhMGEyYjCCAiIwDQYJKoZIhvcN
AQEBBQADggIPADCCAgoCggIBANJg1kWF4+IjeVraRVen2FuvvZo3y/qXwGVEnTrG
R/YNC6J0Esr3S7lf+7TsWivQFgHevuL+0nYNdcSxass6Zwch4NUZaMgbAaIkAv6t
QNanmBYPopgup611NIRv+M+KoQ6QM0Ce0IYmV3HO/89S4fD5K35oYgPY/f0CUwMZ
rCge3rJ7YWIgBNKeNokKmtjMnJBm6nk6O7Vua/SOPQxx/2QHc+41qUN+Vcm+ahb0
8MjgUT0ytRhZJHnOu6HLd+lCJXogurVDgyheB5G5rFZmySMM+nEJvb5seMg/fNo4
b+VeFxBshoLnUETo76+P755Ld2nWV7TOLMmW2fggLyl0TEYim2gRQ/T25pCivQbM
NDhcmDeKrMX4n2u9elE6QjDdBhNBNIN5vcT0GdH2i278BqiaVkXw9fPohwl43XRm
jeweor/991KOC/L1UhRMKt5jAacdfZ4r3HK5HBlYZJdy6gDO/y9KQB1sT332kewf
4G1gyoY1jXv59noqL+41MpKikrWmvF/Sn2MPcWORyz1DMFpYJUbSEpSE5SgyejFV
YIbjFBJ1kIIsPAChnrSlr3z2AFSKCyQuyJqbJUsKtBBXt6gyHyxE0JxRZ+4egBur
Npiiv+K0m7ssTmrbffwaxJCkJd6phLgt3DcSflrG7sSKwOqsSB7wXuktjKnGMhh3
tTibAgMBAAGjgbYwgbMwHQYDVR0OBBYEFA5Vb0b1O3dn4blz3FXmruq0/SfdMB8G
A1UdIwQYMBaAFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMA8GA1UdEwEB/wQFMAMBAf8w
DgYDVR0PAQH/BAQDAgGGMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHBzOi8vYW5kcm9p
ZC5nb29nbGVhcGlzLmNvbS9hdHRlc3RhdGlvbi9jcmwvRThGQTE5NjMxNEQyRkEx
ODANBgkqhkiG9w0BAQsFAAOCAgEADg1xSogKWFO2MRR92iIxxgbW7zsiTdelwD+/
xrRko/uSwsxn9GwkJUlu9ssI1qgNlAZ/jIw8sXfNwj/HXqOFbfellBPNWlzzmwoN
4YJC9Mk/rfz7fKonBMwcEkUV6+ZwoGzed3dUmx8CBXYDpPxsB/TLu1n1y+1Y2DCb
bjz3dsE+TDCYS0JpguFHg9v8KSPiyStdjODGxegFBpgk85suP+WlKvCbnt/XWGGe
ZP5yD8yw9iGKeCRIcPDWARhTYpf7522um89vXqLB0bs2iBj4a4KH+H0BIAu6pnzR
DsNgqY5abpEOCHxJXgsCvhVqeE/fC+xo02HLJMFk4AUqvZ1zG6/7cDjDZDqFZmcd
CuQ/+4YycR0DEQa8CsRQIZ9k4+BTvFfUgsSidyMfW8qghraMkOYNew0wDc1FGfOg
dlauffbHXimykq18Ec8EGmSEtguM2wt88OtcYCG2thjNbOXws26TmLoJwGr2uKgF
VfqylLExXAli4Py/Bb1GlYO4dYk5dcK0c1Tjaxp1trhBLLyGLAmJqcHICteHzFSU
E6Vd3StQEw3EqCskdAwdZHSyZCCcjXAUulsNB76I//QzDIzX9M+dV4emCiwd3jFT
8YTbQg2JBI+eDIfDZ3f3LUFQII6+nB0PTQrMNICgD9at+Ed5Daqb628Dxgmd6Ykq
NRVGIU0=</item>
        <item>MIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV
BAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy
ODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B
AQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS
Sxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7
tv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj
nar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq
C4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ
oVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O
JtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg
sTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi
igHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M
RPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E
aDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um
AGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD
VR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO
BgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk
Lmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD
ggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB
Pb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m
qC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY
DBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm
QUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u
JU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD
CdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy
ZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD
qwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic
MDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1
wDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk</item>
    </string-array>
</resources>
